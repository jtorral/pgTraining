#### To build the images, run ...

docker build -t pg16-rocky8-training .

#### Create the network if needed

docker network create pgnet

#### Run the db containers
docker run -p 5411:5432 --ip 172.18.0.11  --env=PGPASSWORD=postgres -v pg1-pgdata:/pgdata --hostname pg1-training --network=pgnet --name=pg1-training -d pg16-rocky8-training
docker run -p 5412:5432 --ip 172.18.0.12  --env=PGPASSWORD=postgres -v pg2-pgdata:/pgdata --hostname pg2-training --network=pgnet --name=pg2-training -d pg16-rocky8-training

#### If you get a network error, identify  network settings for pgnet with a simple docker inspect and grep.

docker network inspect pgnet | grep Subnet

                    "Subnet": "172.20.0.0/16",

#### Then the static IP's could be defined based on the above output. For example ...

docker run -p 5411:5432 --ip 172.20.0.11 --env=PGPASSWORD=postgres -v pg1-pgdata:/pgdata --hostname pg1-training --network=pgnet --name=pg1-training -d pg16-rocky8-training
docker run -p 5412:5432 --ip 172.20.0.12 --env=PGPASSWORD=postgres -v pg2-pgdata:/pgdata --hostname pg2-training --network=pgnet --name=pg2-training -d pg16-rocky8-training

#### use the differentip range for the remaining containers you start.



# Run an extra container if instructed to do so
docker run -p 5413:5432 --ip 172.18.0.13  --env=PGPASSWORD=postgres -v pg3-pgdata:/pgdata --hostname pg3-training --network=pgnet --name=pg3-training -d pg16-rocky8-training

# Run the container for pgbackrest
docker run -p 5415:5432 --ip 172.18.0.15  --env=PGPASSWORD=postgres -v pgbackrest-pgdata:/pgdata --hostname pgbackrest --network=pgnet --name=pgbackrest -d pg16-rocky8-training


# Run the etcd containers if instructed to do so
docker run --hostname etcd1 --ip 172.18.0.21 --network=pgnet --name=etcd1 -d pg16-rocky8-training
docker run --hostname etcd2 --ip 172.18.0.22 --network=pgnet --name=etcd2 -d pg16-rocky8-training

# Optionally, run a 3rd one
docker run --hostname etcd3 --ip 172.18.0.23 --network=pgnet --name=etcd3 -d pg16-rocky8-training
